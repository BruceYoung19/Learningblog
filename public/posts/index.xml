<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Bruce&#39;s Blog</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Bruce&#39;s Blog</description>
    <generator>Hugo -- 0.128.2</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jul 2024 15:01:32 +1200</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Appscript </title>
      <link>http://localhost:1313/posts/2024-07-20/</link>
      <pubDate>Sat, 20 Jul 2024 15:01:32 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-07-20/</guid>
      <description>Version Review Today I have been reviewing version 2 of my script. The climbing issue of having to create and keep track of the events while preparing for the week is quite frustrating at the least. My Version 3 is to focus on efficiency and also portability.
Currently, I have created a template sheet that generates calendar events based on the tags.
Two issues I have currently related to these events are the following: At the end of the month of the year, How do I change this?</description>
    </item>
    <item>
      <title>Hyprland Update - Linux</title>
      <link>http://localhost:1313/posts/2024-07-18/</link>
      <pubDate>Thu, 18 Jul 2024 19:18:37 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-07-18/</guid>
      <description>Hyprland Testing I finally understand how to create screenshots in Hyprland as no other application would as the compiler is not x11 based. The best way is to use Grim as it takes a picture of the whole screen.
Hyprland configurations are quite easy to learn in the .config/hypr/hyprland.conf. The only confusing thing about how Hyprland wants this to be set up is the idea of using bind = ,Print,exec,grim is hard for me to get around.</description>
    </item>
    <item>
      <title>Google App Script Update</title>
      <link>http://localhost:1313/posts/2024-07-13/</link>
      <pubDate>Sat, 13 Jul 2024 21:58:28 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-07-13/</guid>
      <description>I have been testing the app scripting since updating the entry. However, I am going as I have been testing, I have been wanting to change the build since the design is more minimalist and also does not clutter the page.
Currently, the design looks like this.
However, I realized that react is very difficult to implement globally. So Alternatively I will remain using the spreadsheet as the base of my tool.</description>
    </item>
    <item>
      <title>Linux Update</title>
      <link>http://localhost:1313/posts/2024-07-08/</link>
      <pubDate>Mon, 08 Jul 2024 13:27:12 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-07-08/</guid>
      <description>Linux Update: After trying out all of the configurations for dot-files, I have released the pros and cons of real Linux. A Pro, with Linux, is the declaring alias is easy the only requirement is changing the .bashrc file but this is not global like in Nix-OS.
This makes me want to go back to Nix-Os.
As I am using Linux for my daily driver.The window manager concept is tough to get into as it does save battery and also minimizes the use of mouse interactions.</description>
    </item>
    <item>
      <title>Learning Update</title>
      <link>http://localhost:1313/posts/2024-07-06/</link>
      <pubDate>Sat, 06 Jul 2024 14:18:18 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-07-06/</guid>
      <description>Learning for Software Testing I have changed it up a bit and started my online course via LinkedIn Learning. I have continued learning in Testing for scripts to gain a better understanding of how scripting can help testers automate graphs and organize data. I have learned the purpose of selenium. In most use cases for the software selenium automates the basic input of a website.
Since the standard changes daily, I have been learning Python simultaneously, as Python is mostly script-based before moving on to JavaScript.</description>
    </item>
    <item>
      <title>Project Update</title>
      <link>http://localhost:1313/posts/2024-07-03/</link>
      <pubDate>Wed, 03 Jul 2024 20:22:28 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-07-03/</guid>
      <description>Since Coming Back to Arch OS. I have been much more technical. Also, I feel freer because I can modify the system without restrictions. However, with these changes, there will never be without cons. At this stage, the only con I have found is package management. I can not keep track of what is installed on my computer.
In terms of upskilling, I have started updating the following repository.
Link - https://github.</description>
    </item>
    <item>
      <title>Project Update Calendar Project</title>
      <link>http://localhost:1313/posts/2024-06-30/</link>
      <pubDate>Sun, 30 Jun 2024 10:57:53 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-06-30/</guid>
      <description>Link - https://github.com/BruceYoung19/GoogleCalendarScript
Upskilling Log What have I learned:
Data structures Arrays Dates Google scripting Git commit Technical Documentation Should be keeping up with the time frame Git hub License What I could have worked on:
Git fork API Version Control Version 1 - code.gs
only able to make events Problem:
This is not useable on a daily use. Version 2 - Codev2.gs
Spreadsheet to make all the events Creating a tag for the event STRUCTURE = [TAG] Event , startdate, enddate, description, code This can work in a span of a timeframe creating with one line of code.</description>
    </item>
    <item>
      <title>Nix OS Review</title>
      <link>http://localhost:1313/posts/2024-06-29/</link>
      <pubDate>Sat, 29 Jun 2024 10:49:46 +1200</pubDate>
      <guid>http://localhost:1313/posts/2024-06-29/</guid>
      <description>Link - https://nixos.org/
I have been using NixOs for four months now, but I think it is time for a change. Currently, at this stage in my career, there is a lot to learn. However, the timeframe for each project has been shortened significantly. Therefore I will be changing to another Linux distribution very shortly.
What I love about the NixOs: Reproducibility, being able to copy over a configuration from git, and rebuilding with one simple command have made my life incredibly easy with maintenance.</description>
    </item>
    <item>
      <title>HuGo Modding</title>
      <link>http://localhost:1313/posts/26-06/</link>
      <pubDate>Wed, 26 Jun 2024 19:40:50 +1200</pubDate>
      <guid>http://localhost:1313/posts/26-06/</guid>
      <description>Modding After testing the paper mod theme, I have realized it is not much different from the normal paper theme. Also, I am still missing a lot of features at this very moment, Like the following:
Search Archive Tags Images </description>
    </item>
    <item>
      <title>First Post</title>
      <link>http://localhost:1313/posts/23-06-24/</link>
      <pubDate>Sun, 23 Jun 2024 13:54:04 +1200</pubDate>
      <guid>http://localhost:1313/posts/23-06-24/</guid>
      <description>HUGO - Hosted for the first time. This is my first time hosting a website from Git Hub as this will be an excellent way to keep track of all my work.
Currently, I am trying the normal paper theme. it is great that it is minimalist and provides ways to show the posts. However, there is no design element to the theme.
So therefore, we will be changing over to another theme in Hugo.</description>
    </item>
  </channel>
</rss>
